version: 2
jobs:
  edm/run:
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
    parallelism: 1
    steps:
      - checkout
      - restore_cache:
          keys:
          - cache-{{ arch }}-{{ .Branch }}-{{ checksum "pubspec.yaml" }}
      - run:
          name: install cucumber
          command: gem install cucumber -v 2.99.0
      - run:
          name: install dart
          command: |
            sudo apt-get update
            sudo apt-get install apt-transport-https
            sudo sh -c 'curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
            sudo sh -c 'curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list'
            sudo apt-get update
            sudo apt-get install dart
            dart --version
      - run:
          name: Install dependencies
          command: /usr/lib/dart/bin/pub get
      - run:
          name: Install webdriver
          command: |
            sudo apt-get install unzip
            wget -N http://chromedriver.storage.googleapis.com/2.26/chromedriver_linux64.zip
            unzip chromedriver_linux64.zip
            chmod +x chromedriver
            sudo mv -f chromedriver /usr/local/share/chromedriver
            sudo ln -s /usr/local/share/chromedriver /usr/local/bin/chromedriver
            sudo ln -s /usr/local/share/chromedriver /usr/bin/chromedriver
      - save_cache:
          key: cache-{{ arch }}-{{ .Branch }}-{{ checksum "pubspec.yaml" }}
          paths:
            - ~/.dart_tool
            - ~/.cache
      - run:
          name: Start webdriver
          command: chromedriver --port=9515
      - run:
          name: Start test runner
          command: dart bin/runner.dart -l test/definitions.dar
      - run:
          name: Run tests
          command: |
            cucumber -f json > results/report.json
      - persist_to_workspace:
          root: ~/
          paths:
            - project/results
            - project/scripts
  artifacts:
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - store_artifacts:
          path: results/report.json
      - store_test_results:
          path: ./
  upload_reports:
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: install dependencies
          command: apt-get update && apt-get install -y jq
      - run:
          name: refresh Xray API key
          command: |
            echo 'export XRAY_API_TOKEN=`. scripts/get_xray_api_token.sh`' >> $BASH_ENV

      - run:
          name: upload reports
          command: . scripts/upload_test_results_to_xray.sh
workflows:
  version: 2
  run_tests:
    jobs:
      - edm/run
      - artifacts:
          requires:
            - edm/run
      - upload_reports:
          requires:
            - artifacts
  run_tests_nightly:
    jobs:
      - edm/run
      - artifacts:
          requires:
            - edm/run
      - upload_reports:
          requires:
            - artifacts
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only:
                - master
